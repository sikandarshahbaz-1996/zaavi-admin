{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sikandarshahbaz/Desktop/Code/internal/zaavi/zaavi-admin/src/app/page.js"],"sourcesContent":["// app/page.js\n\"use client\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  CircularProgress\n} from \"@mui/material\";\n\nexport default function Home() {\n  const [usage, setUsage] = useState([]);\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = (m, y) => {\n    setIsLoading(true);\n    fetch(`/api/twilio-logs?month=${m}&year=${y}`)\n      .then((r) => r.json())\n      .then((d) => setUsage(d))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    fetchData(month, year);\n  }, [month, year]);\n\n  const computeTotals = (data) => {\n    const totals = {\n      inboundMinutes: 0,\n      outboundMinutes: 0,\n      inboundSms: 0,\n      outboundSms: 0,\n      usageCost: 0,\n      monthlyFee: 0,\n      totalSpent: 0\n    };\n    data.forEach((item) => {\n      totals.inboundMinutes += parseFloat(item.inboundMinutes) || 0;\n      totals.outboundMinutes += parseFloat(item.outboundMinutes) || 0;\n      totals.inboundSms += item.inboundSms || 0;\n      totals.outboundSms += item.outboundSms || 0;\n      totals.usageCost += parseFloat(item.usageCost) || 0;\n      totals.monthlyFee += parseFloat(item.monthlyFee) || 0;\n      totals.totalSpent += parseFloat(item.totalSpent) || 0;\n    });\n    return totals;\n  };\n\n  const totals = computeTotals(usage);\n\n  if (isLoading) {\n    return (\n      <Container maxWidth=\"md\" style={{ marginTop: \"2rem\", textAlign: \"center\" }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  const grandTotal = totals.totalSpent.toFixed(4);\n\n  return (\n    <Container maxWidth=\"md\" style={{ marginTop: \"2rem\" }}>\n      <Typography variant=\"h4\" gutterBottom>\n        ðŸ“ž Twilio Number Usage\n      </Typography>\n      <Box display=\"flex\" gap={2} mb={2}>\n        <FormControl fullWidth>\n          <InputLabel>Month</InputLabel>\n          <Select value={month} label=\"Month\" onChange={(e) => setMonth(e.target.value)}>\n            {[...Array(12)].map((_, i) => (\n              <MenuItem key={i} value={i + 1}>\n                {new Date(0, i).toLocaleString(\"default\", { month: \"long\" })}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <InputLabel>Year</InputLabel>\n          <Select value={year} label=\"Year\" onChange={(e) => setYear(e.target.value)}>\n            {[2024, 2025].map((yr) => (\n              <MenuItem key={yr} value={yr}>\n                {yr}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell><b>Client</b></TableCell>\n              <TableCell><b>Phone Number</b></TableCell>\n              <TableCell><b>Inbound Minutes</b></TableCell>\n              <TableCell><b>Outbound Minutes</b></TableCell>\n              <TableCell><b>Inbound SMS</b></TableCell>\n              <TableCell><b>Outbound SMS</b></TableCell>\n              <TableCell><b>Usage Cost (CAD)</b></TableCell>\n              <TableCell><b>Monthly Fee (CAD)</b></TableCell>\n              <TableCell><b>Total (CAD)</b></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {usage.map((item) => (\n              <TableRow key={item.number}>\n                <TableCell>{item.friendlyName}</TableCell>\n                <TableCell>{item.number}</TableCell>\n                <TableCell>{item.inboundMinutes}</TableCell>\n                <TableCell>{item.outboundMinutes}</TableCell>\n                <TableCell>{item.inboundSms}</TableCell>\n                <TableCell>{item.outboundSms}</TableCell>\n                <TableCell>${item.usageCost}</TableCell>\n                <TableCell>${item.monthlyFee}</TableCell>\n                <TableCell>${item.totalSpent}</TableCell>\n              </TableRow>\n            ))}\n            {usage.length > 0 && (\n              <TableRow>\n                <TableCell colSpan={2}><b>Totals</b></TableCell>\n                <TableCell>{totals.inboundMinutes.toFixed(2)}</TableCell>\n                <TableCell>{totals.outboundMinutes.toFixed(2)}</TableCell>\n                <TableCell>{totals.inboundSms}</TableCell>\n                <TableCell>{totals.outboundSms}</TableCell>\n                <TableCell>${totals.usageCost.toFixed(4)}</TableCell>\n                <TableCell>${totals.monthlyFee.toFixed(4)}</TableCell>\n                <TableCell>${totals.totalSpent.toFixed(4)}</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {usage.length > 0 && (\n        <Box mt={2}>\n          <Typography variant=\"h6\"><b>Grand Total Cost: ${grandTotal} CAD</b></Typography>\n        </Box>\n      )}\n    </Container>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}